export class WeakArray {
    constructor() {
        this.#finalizationRegistry = new FinalizationRegistry((obj) => {
            this.#items.delete(obj);
        });
    }
    #items = new Set();
    #finalizationRegistry;
    add(obj) {
        const wref = new WeakRef(obj);
        this.#items.add(wref);
        this.#finalizationRegistry.register(obj, wref);
        return wref;
    }
    remove(obj) {
        this.#items.delete(obj);
    }
    *[Symbol.iterator]() {
        for (const o of this.#items) {
            const v = o.deref();
            if (v)
                yield v;
            else
                this.#items.delete(o);
        }
    }
}
