import { BaseCustomWebComponentConstructorAppend, css, html, TypedEvent } from '/web-component-designer-demo/node_modules/@node-projects/base-custom-webcomponent/./dist/index.js';
export class ImageButtonListSelector extends BaseCustomWebComponentConstructorAppend {
    constructor() {
        super(...arguments);
        this.valueChanged = new TypedEvent();
    }
    get value() {
        return this._value;
    }
    set value(value) {
        const oldValue = this._value;
        this._value = value;
        this._updateValue();
        this.valueChanged.emit({ newValue: this._value, oldValue: oldValue });
    }
    _updateValue() {
        if (this.value) {
            this._getDomElement('value').innerText = this.value;
            this._getDomElement('value').classList.add('value-set');
        }
        else {
            this._getDomElement('value').classList.remove('value-set');
        }
        const slot = this._getDomElement('slot');
        for (let e of slot.assignedElements()) {
            if (e.dataset.value == this.value)
                e.style.background = "cornflowerblue";
            else
                e.style.background = "";
        }
    }
    ready() {
        var _a, _b;
        this._parseAttributesToProperties();
        const slot = this._getDomElement('slot');
        slot.onclick = (e) => {
            const path = e.composedPath();
            for (let e of slot.assignedElements()) {
                if (path.indexOf(e) >= 0) {
                    this.value = e.dataset.value;
                }
            }
        };
        this._getDomElement('property').innerText = (_a = this.property) !== null && _a !== void 0 ? _a : '';
        this._getDomElement('value').innerText = (_b = this.unsetValue) !== null && _b !== void 0 ? _b : '';
        this._updateValue();
    }
}
ImageButtonListSelector.style = css `
    div {
      font-size: 10px;
      color: white;
    }
    #property {
      color: #00aff0;
    }
    #value {
      color: lightgray;
    }
    #value.value-set {
      color: wheat;
    }
    .container {
      display: flex;
      flex-wrap: wrap;
      flex-direction: row;
    }
    ::slotted(button) {
      min-width: 24px;
      height: 24px;
      padding: 1px;
      background: white;
      border: 1px solid lightgray;
    }
  `;
ImageButtonListSelector.template = html `
    <div>
      <div><span id="property"></span>: <span id="value"></span></div>
      <div class="container"><slot id="slot"></slot></div>
    </div>
  `;
customElements.define('node-projects-image-button-list-selector', ImageButtonListSelector);
