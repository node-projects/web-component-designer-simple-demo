import { BaseCustomWebComponentConstructorAppend, css, html, TypedEvent } from '@node-projects/base-custom-webcomponent';
export class CodeViewSimple extends BaseCustomWebComponentConstructorAppend {
    dispose() {
    }
    canvasElement;
    elementsToPackages;
    onTextChanged = new TypedEvent();
    _text;
    static style = css `
    :host {
      display: block;
      height: 100%;
      width: 100%;
    }

    textarea {
      height: 100%;
      width: 100%;
      resize: none;
      white-space: nowrap;
      box-sizing: border-box;
    }
    `;
    static template = html `
      <div id="container" style="width: 100%; height: 100%; position: absolute;">
        <textarea id="text"></textarea>
      </div>
  `;
    executeCommand(command) {
    }
    canExecuteCommand(command) {
        return false;
    }
    async ready() {
        this._text = this._getDomElement('text');
    }
    focusEditor() {
        requestAnimationFrame(() => {
            this.focus();
            this._text.focus();
        });
    }
    activated() {
    }
    update(code) {
        this._text.value = code;
    }
    getText() {
        return this._text.value;
    }
    setSelection(position) {
        this._text.setSelectionRange(position.start, position.start + position.length);
    }
}
customElements.define('node-projects-code-view-simple', CodeViewSimple);
