import { CommandType } from '../../../../../commandHandling/CommandType.js';
export class CopyPasteContextMenu {
    shouldProvideContextmenu(event, designerView, designItem, initiator) {
        return true;
    }
    provideContextMenuItems(event, designerView, designItem) {
        return [
            { title: 'copy', icon: `<img src="${new URL('../../../../../../assets/icons/copy.svg', import.meta.url)}">`, action: () => { designerView.executeCommand({ type: CommandType.copy }); }, shortCut: 'Ctrl + C', disabled: designItem === null },
            { title: 'cut', icon: `<img src="${new URL('../../../../../../assets/icons/cut.svg', import.meta.url)}">`, action: () => { designerView.executeCommand({ type: CommandType.cut }); }, shortCut: 'Ctrl + X', disabled: designItem === null },
            { title: 'paste', icon: `<img src="${new URL('../../../../../../assets/icons/paste.svg', import.meta.url)}">`, action: () => { designerView.executeCommand({ type: CommandType.paste }); }, shortCut: 'Ctrl + V' },
            { title: 'delete', icon: `<img src="${new URL('../../../../../../assets/icons/delete.svg', import.meta.url)}">`, action: () => { designerView.executeCommand({ type: CommandType.delete }); }, shortCut: 'Del', disabled: designItem === null },
        ];
    }
}
