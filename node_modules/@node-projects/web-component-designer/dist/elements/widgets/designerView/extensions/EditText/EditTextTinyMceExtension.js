import { AbstractExtension } from '../AbstractExtension.js';
import { ExtensionType } from "../ExtensionType.js";
export class EditTextTinyMceExtension extends AbstractExtension {
    constructor(extensionManager, designerView, extendedItem) {
        super(extensionManager, designerView, extendedItem);
        this.tinyMceConfig = {
            target: null,
            menubar: false,
            inline: true,
            plugins: [
                'link',
                'lists',
                'powerpaste',
                'autolink',
                'tinymcespellchecker'
            ],
            toolbar: [
                'undo redo | bold italic underline | fontselect fontsizeselect',
                'forecolor backcolor | alignleft aligncenter alignright alignfull | numlist bullist outdent indent'
            ],
            valid_elements: 'p[style],strong,em,span[style],a[href],ul,ol,li',
            valid_styles: {
                '*': 'font-size,font-family,color,text-decoration,text-align'
            },
            powerpaste_word_import: 'clean',
            powerpaste_html_import: 'clean',
        };
        this._contentEditedBound = this._contentEdited.bind(this);
        this._blurBound = this._blur.bind(this);
    }
    extend() {
        //todo -> check what to do with extensions, do not loose edit on mouse click,...
        //maybe use a html edit framework
        this.extendedItem.instanceServiceContainer.selectionService.clearSelectedElements();
        //this.extensionManager.removeExtension(this.extendedItem, ExtensionType.PrimarySelection);
        //this.extensionManager.removeExtension(this.extendedItem, ExtensionType.Selection);
        this.extendedItem.element.addEventListener('input', this._contentEditedBound);
        this.extendedItem.element.addEventListener('blur', this._blurBound);
        this.extendedItem.element.focus();
        this.designerView.eatEvents = this.extendedItem.element;
        this.tinyMceConfig.target = this.extendedItem.element;
        //@ts-ignore
        tinymce.init(this.tinyMceConfig);
    }
    refresh() {
        this.dispose();
    }
    dispose() {
        this.extendedItem.element.removeEventListener('input', this._contentEditedBound);
        this.extendedItem.element.removeEventListener('blur', this._blurBound);
        //this.designerView.disableKeyboardEvents = false;
    }
    _contentEdited() {
        //todo -> save???
        //this.extendedItem.content = this.extendedItem.element.innerHTML;
        //console.log(this.extendedItem.element.innerHTML)
    }
    _blur() {
        this.extensionManager.removeExtension(this.extendedItem, ExtensionType.Doubleclick);
    }
}
