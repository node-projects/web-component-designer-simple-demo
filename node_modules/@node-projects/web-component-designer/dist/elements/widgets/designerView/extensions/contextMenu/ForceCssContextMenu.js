import { NodeType } from '../../../../item/NodeType.js';
export class ForceCssContextMenu {
    shouldProvideContextmenu(event, designerView, designItem, initiator) {
        return designItem != null && designItem.nodeType == NodeType.Element;
    }
    provideContextMenuItems(event, designerView, designItem) {
        return [
            { title: ':hover', action: () => { designItem.cssForceHover = !designItem.cssForceHover; }, checked: designItem.cssForceHover },
            { title: ':active', action: () => { designItem.cssForceActive = !designItem.cssForceActive; }, checked: designItem.cssForceActive },
            { title: ':visited', action: () => { designItem.cssForceVisited = !designItem.cssForceVisited; }, checked: designItem.cssForceVisited },
            { title: ':focus', action: () => { designItem.cssForceFocus = !designItem.cssForceFocus; }, checked: designItem.cssForceFocus },
            { title: ':focus-within', action: () => { designItem.cssForceFocusWithin = !designItem.cssForceFocusWithin; }, checked: designItem.cssForceFocusWithin },
            { title: ':focus-visible', action: () => { designItem.cssForceFocusVisible = !designItem.cssForceFocusVisible; }, checked: designItem.cssForceFocusVisible },
        ];
    }
}
