import { ContextMenu } from "../../../../helper/contextMenu/ContextMenu.js";
export class OptionsContextMenuButton {
    constructor() {
    }
    provideButtons(designerView, designerCanvas) {
        const btn = document.createElement('div');
        btn.innerHTML = 'O';
        btn.title = 'options';
        btn.className = 'toolbar-control';
        btn.onclick = (e) => {
            this.showCtxMenu(e, designerCanvas);
        };
        btn.oncontextmenu = (e) => {
            e.preventDefault();
            this.showCtxMenu(e, designerCanvas);
        };
        return [btn];
    }
    showCtxMenu(event, designerCanvas) {
        ContextMenu.show([
            {
                title: 'simulate hover on hover', checked: designerCanvas.instanceServiceContainer.designContext.extensionOptions.simulateHoverOnHover, action: () => {
                    designerCanvas.instanceServiceContainer.designContext.extensionOptions.simulateHoverOnHover = !designerCanvas.instanceServiceContainer.designContext.extensionOptions.simulateHoverOnHover;
                }
            },
            {
                title: 'select unhitable elements', checked: designerCanvas.instanceServiceContainer.designContext.extensionOptions.selectUnhitableElements, action: () => {
                    designerCanvas.instanceServiceContainer.designContext.extensionOptions.selectUnhitableElements = !designerCanvas.instanceServiceContainer.designContext.extensionOptions.selectUnhitableElements;
                }
            }
        ], event);
    }
}
