import { CommandType } from '../../../../../commandHandling/CommandType.js';
import { NodeType } from '../../../../item/NodeType.js';
export class ZMoveContextMenu {
    shouldProvideContextmenu(event, designerView, designItem, initiator) {
        return !designItem.isRootItem && designItem.nodeType == NodeType.Element;
    }
    provideContextMenuItems(event, designerView, designItem) {
        return [
            { title: 'to front', action: () => { designerView.executeCommand({ type: CommandType.moveToFront }); } },
            { title: 'move forward', action: () => { designerView.executeCommand({ type: CommandType.moveForward }); } },
            { title: 'move backward', action: () => { designerView.executeCommand({ type: CommandType.moveBackward }); } },
            { title: 'to back', action: () => { designerView.executeCommand({ type: CommandType.moveToBack }); } },
        ];
    }
}
