import { AbstractExtension } from './AbstractExtension.js';
export class PositionExtension extends AbstractExtension {
    _line1;
    _line2;
    _line3;
    _line4;
    constructor(extensionManager, designerView, extendedItem) {
        super(extensionManager, designerView, extendedItem);
    }
    extend() {
        this.refresh();
    }
    refresh() {
        const computedStyle = getComputedStyle(this.extendedItem.element);
        let itemRect = this.extendedItem.element.getBoundingClientRect();
        const xOffset = itemRect.x - this.designerCanvas.containerBoundingRect.x;
        const yOffset = itemRect.y - this.designerCanvas.containerBoundingRect.y;
        let left = Number.parseFloat(computedStyle.left.replace('px', ''));
        if (isNaN(left))
            left = 0;
        let top = Number.parseFloat(computedStyle.top.replace('px', ''));
        if (isNaN(top))
            top = 0;
        let right = Number.parseFloat(computedStyle.right.replace('px', ''));
        if (isNaN(right))
            right = 0;
        let bottom = Number.parseFloat(computedStyle.bottom.replace('px', ''));
        if (isNaN(bottom))
            bottom = 0;
        let tx = 0;
        let ty = 0;
        if (computedStyle.transform !== 'none') {
            const transforms = computedStyle.transform.replace('matrix(', '').split(',');
            tx = Number.parseFloat(transforms[4]);
            ty = Number.parseFloat(transforms[5].replace(')', ''));
        }
        this._line1 = this._drawLine(xOffset - left - tx, yOffset + itemRect.height / 2, xOffset, yOffset + itemRect.height / 2, 'svg-position', this._line1);
        this._line2 = this._drawLine(xOffset + itemRect.width / 2, yOffset - top - ty, xOffset + itemRect.width / 2, yOffset, 'svg-position', this._line2);
        this._line3 = this._drawLine(xOffset + itemRect.width, yOffset + itemRect.height / 2, xOffset + itemRect.width + right + -1 * tx, yOffset + itemRect.height / 2, 'svg-position', this._line3);
        this._line4 = this._drawLine(xOffset + itemRect.width / 2, yOffset + itemRect.height, xOffset + itemRect.width / 2, yOffset + itemRect.height + bottom + -1 * ty, 'svg-position', this._line4);
    }
    dispose() {
        this._removeAllOverlays();
    }
}
