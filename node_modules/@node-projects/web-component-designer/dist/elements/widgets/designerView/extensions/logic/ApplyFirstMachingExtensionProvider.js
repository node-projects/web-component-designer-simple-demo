export class ApplyFirstMachingExtensionProvider {
    extensions;
    extIndex;
    style;
    constructor(...extensions) {
        this.extensions = extensions;
        for (let e of extensions) {
            if (e.style) {
                if (!this.style)
                    this.style = [];
                if (Array.isArray(e.style))
                    this.style.push(...e.style);
                else
                    this.style.push(e.style);
            }
        }
    }
    shouldExtend(extensionManager, designerCanvas, designItem) {
        for (this.extIndex = 0; this.extIndex < this.extensions.length; this.extIndex++) {
            if (this.extensions[this.extIndex].shouldExtend(extensionManager, designerCanvas, designItem))
                return true;
        }
        return false;
    }
    getExtension(extensionManager, designerCanvas, designItem) {
        return this.extensions[this.extIndex].getExtension(extensionManager, designerCanvas, designItem);
    }
}
