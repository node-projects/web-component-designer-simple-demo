import { CalculateGridInformation } from "../../../helper/GridHelper.js";
import { AbstractExtension } from './AbstractExtension.js';
import { OverlayLayer } from "./OverlayLayer.js";
export class GridExtension extends AbstractExtension {
    constructor(extensionManager, designerView, extendedItem) {
        super(extensionManager, designerView, extendedItem);
    }
    extend() {
        const gridInformation = CalculateGridInformation(this.extendedItem);
        for (let gap of gridInformation.gaps) {
            this._drawRect(gap.x, gap.y, gap.width, gap.height, 'svg-grid-gap', null, OverlayLayer.Background);
        }
        for (let cellRow of gridInformation.cells) {
            for (let cell of cellRow) {
                this._drawRect(cell.x, cell.y, cell.width, cell.height, 'svg-grid', null, OverlayLayer.Background);
                if (cell.name) {
                    const text = this._drawText(cell.name, cell.x, cell.y, 'svg-grid-area', null, OverlayLayer.Background);
                    text.setAttribute("dominant-baseline", "hanging");
                }
            }
        }
    }
    refresh() {
        this._removeAllOverlays();
        this.extend();
    }
    dispose() {
        this._removeAllOverlays();
    }
}
