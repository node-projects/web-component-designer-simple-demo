import { AbstractExtension } from "../AbstractExtension.js";
import { ExtensionType } from "../ExtensionType.js";
export class EditTextCkEditorExtension extends AbstractExtension {
    constructor(extensionManager, designerView, extendedItem) {
        super(extensionManager, designerView, extendedItem);
        this._contentEditedBound = this._contentEdited.bind(this);
        this._blurBound = this._blur.bind(this);
    }
    extend() {
        //todo -> check what to do with extensions, do not loose edit on mouse click,...
        //maybe use a html edit framework
        this.extendedItem.instanceServiceContainer.selectionService.clearSelectedElements();
        //this.extensionManager.removeExtension(this.extendedItem, ExtensionType.PrimarySelection);
        //this.extensionManager.removeExtension(this.extendedItem, ExtensionType.Selection);
        this.extendedItem.element.addEventListener('input', this._contentEditedBound);
        this.extendedItem.element.addEventListener('blur', this._blurBound);
        this.extendedItem.element.focus();
        this.designerView.eatEvents = this.extendedItem.element;
        //@ts-ignore
        BalloonEditor
            .create(this.extendedItem.element)
            .catch(error => {
            console.error(error);
        });
    }
    refresh() {
        this.dispose();
    }
    dispose() {
        this.extendedItem.element.removeEventListener('input', this._contentEditedBound);
        this.extendedItem.element.removeEventListener('blur', this._blurBound);
        //this.designerView.disableKeyboardEvents = false;
    }
    _contentEdited() {
        //todo -> save???
        //this.extendedItem.content = this.extendedItem.element.innerHTML;
        //console.log(this.extendedItem.element.innerHTML)
    }
    _blur() {
        this.extensionManager.removeExtension(this.extendedItem, ExtensionType.Doubleclick);
    }
}
