export var ExtensionType;
(function (ExtensionType) {
    ExtensionType[ExtensionType["Directly"] = 0] = "Directly";
    ExtensionType[ExtensionType["Permanent"] = 1] = "Permanent";
    ExtensionType[ExtensionType["Selection"] = 2] = "Selection";
    ExtensionType[ExtensionType["PrimarySelection"] = 3] = "PrimarySelection";
    ExtensionType[ExtensionType["PrimarySelectionContainer"] = 4] = "PrimarySelectionContainer";
    ExtensionType[ExtensionType["MouseOver"] = 5] = "MouseOver";
    ExtensionType[ExtensionType["OnlyOneItemSelected"] = 6] = "OnlyOneItemSelected";
    ExtensionType[ExtensionType["MultipleItemsSelected"] = 7] = "MultipleItemsSelected";
    /**
     * Extension for the Container wich the dragged element is draged over.
     */
    ExtensionType[ExtensionType["ContainerDragOverAndCanBeEntered"] = 8] = "ContainerDragOverAndCanBeEntered";
    /**
    * Extension for the Container on wich a new element is draged over.
    */
    ExtensionType[ExtensionType["ContainerExternalDragOverAndCanBeEntered"] = 9] = "ContainerExternalDragOverAndCanBeEntered";
    /**
     * Extension for the Current Container wich the dragged element is contained.
     */
    ExtensionType[ExtensionType["ContainerDrag"] = 10] = "ContainerDrag";
    ExtensionType[ExtensionType["Doubleclick"] = 11] = "Doubleclick";
    ExtensionType[ExtensionType["Placement"] = 12] = "Placement";
    /**
     * Extensions only when the container can be Entered.
     * So for Example on a custom webcomponent wich uses a grid layout for it's root, but can not show children,
     * do not display grid extension.
     */
    ExtensionType[ExtensionType["PrimarySelectionAndCanBeEntered"] = 13] = "PrimarySelectionAndCanBeEntered";
    ExtensionType[ExtensionType["PrimarySelectionContainerAndCanBeEntered"] = 14] = "PrimarySelectionContainerAndCanBeEntered";
})(ExtensionType || (ExtensionType = {}));
