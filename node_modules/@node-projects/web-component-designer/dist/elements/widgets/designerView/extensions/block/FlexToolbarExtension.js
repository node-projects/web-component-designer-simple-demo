import { html } from "@node-projects/base-custom-webcomponent";
import { AbstractExtension } from "../AbstractExtension.js";
export class FlexToolbarExtension extends AbstractExtension {
    static template = html `
    <div style="height: 100%; width: 100%;">
      <select id="displayType" style="pointer-events: all; height: 24px; width: 70px; padding: 0; font-weight: 900; text-transform: uppercase; margin-right: 10px;">
        <option>block</option>
        <option selected>flex</option>
        <option>grid</option>
      </select>
    </div>
  `;
    _toolbar;
    constructor(extensionManager, designerView, extendedItem) {
        super(extensionManager, designerView, extendedItem);
    }
    extend(cache, event) {
        this._toolbar = this.createToolbar(FlexToolbarExtension.template, 200, 30);
        const displayTypeEl = this._toolbar.getById('displayType');
        displayTypeEl.onchange = () => {
            this.extendedItem.updateStyleInSheetOrLocal('display', displayTypeEl.value);
        };
        this.refresh(cache, event);
    }
    refresh(cache, event) {
        if (event) {
            const pos = this.designerCanvas.getNormalizedEventCoordinates(event);
            this._toolbar.updatePosition({ x: (pos.x - 16), y: (pos.y - 36) });
        }
    }
    dispose() {
        this._removeAllOverlays();
    }
}
