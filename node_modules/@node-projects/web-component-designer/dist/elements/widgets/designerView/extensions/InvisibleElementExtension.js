import { getDesignerCanvasNormalizedTransformedCornerDOMPoints } from '../../../helper/TransformHelper.js';
import { AbstractExtension } from './AbstractExtension.js';
import { OverlayLayer } from "./OverlayLayer.js";
export class InvisibleElementExtension extends AbstractExtension {
    _rect;
    constructor(extensionManager, designerCanvas, extendedItem) {
        super(extensionManager, designerCanvas, extendedItem);
    }
    extend(cache, event) {
        this.refresh(cache, event);
    }
    refresh(cache, event) {
        const t = getDesignerCanvasNormalizedTransformedCornerDOMPoints(this.extendedItem.element, null, this.designerCanvas, cache);
        if (this._valuesHaveChanges(t[0].x, t[0].y, t[1].x, t[1].y, t[2].x, t[2].y, t[3].x, t[3].y)) {
            this._rect = this._drawTransformedRect(t, 'svg-invisible-div', this._rect, OverlayLayer.Background);
        }
    }
    dispose() {
        this._removeAllOverlays();
    }
}
