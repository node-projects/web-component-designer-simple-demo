import { getDesignerCanvasNormalizedTransformedCornerDOMPoints } from '../../../helper/TransformHelper.js';
import { AbstractExtension } from './AbstractExtension.js';
import { OverlayLayer } from "./OverlayLayer.js";
export class InvisibleElementExtension extends AbstractExtension {
    _rect;
    constructor(extensionManager, designerCanvas, extendedItem) {
        super(extensionManager, designerCanvas, extendedItem);
    }
    extend() {
        this.refresh();
    }
    refresh() {
        let transformedCornerPoints = getDesignerCanvasNormalizedTransformedCornerDOMPoints(this.extendedItem.element, null, this.designerCanvas);
        this._rect = this._drawTransformedRect(transformedCornerPoints, 'svg-invisible-div', this._rect, OverlayLayer.Background);
    }
    dispose() {
        this._removeAllOverlays();
    }
}
