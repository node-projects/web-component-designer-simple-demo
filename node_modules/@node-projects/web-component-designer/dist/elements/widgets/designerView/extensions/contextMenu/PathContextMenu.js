import { createPathD } from '../../../../helper/PathDataPolyfill.js';
export class PathContextMenu {
    shouldProvideContextmenu(event, designerView, designItem, initiator) {
        if (designItem.element instanceof SVGPathElement)
            return true;
        return false;
    }
    provideContextMenuItems(event, designerCanvas, designItem) {
        const pathdata = designItem.node.getPathData({ normalize: true });
        const items = [];
        const lastType = pathdata[pathdata.length - 1].type;
        items.push({ title: '-' });
        if (lastType == 'z' || lastType == 'Z') {
            items.push({
                title: 'open path ', action: () => {
                    pathdata.splice(pathdata.length - 1, 1);
                    designItem.setAttribute('d', createPathD(pathdata));
                }
            });
        }
        else {
            items.push({
                title: 'close path ', action: () => {
                    pathdata.push({ type: 'Z' });
                    designItem.setAttribute('d', createPathD(pathdata));
                }
            });
        }
        return items;
    }
}
