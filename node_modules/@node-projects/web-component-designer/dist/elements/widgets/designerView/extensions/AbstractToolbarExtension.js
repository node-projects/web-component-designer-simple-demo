import { OverlayLayer } from "../OverlayLayer.js";
import { AbstractExtension } from "./AbstractExtension.js";
export class AbstractToolbarExtension extends AbstractExtension {
    _toolbarContainer;
    extend(cache, event) {
        const element = this.template.content.cloneNode(true);
        element.querySelectorAll('*').forEach(x => x.onpointerdown = (e) => {
            this.designerCanvas.ignoreEvent(e);
        });
        const foreignObject = document.createElementNS('http://www.w3.org/2000/svg', 'foreignObject');
        this._toolbarContainer = foreignObject;
        foreignObject.classList.add('svg-toolbar-container');
        foreignObject.setAttribute('width', '1');
        foreignObject.setAttribute('height', '1');
        foreignObject.appendChild(element);
        this.refresh(cache, event);
        this._addOverlay(foreignObject, OverlayLayer.Foreground);
    }
    refresh(cache, event) {
        if (event) {
            const pos = this.designerCanvas.getNormalizedEventCoordinates(event);
            this._toolbarContainer.setAttribute('x', '' + (pos.x - 16));
            this._toolbarContainer.setAttribute('y', '' + (pos.y - 36));
        }
    }
    updateToolbarPosition(position) {
        this._toolbarContainer.setAttribute('x', '' + position.x);
        this._toolbarContainer.setAttribute('y', '' + position.y);
    }
}
