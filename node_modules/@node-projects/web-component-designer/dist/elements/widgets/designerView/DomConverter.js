import { IndentedTextWriter } from "../../helper/IndentedTextWriter.js";
import { SimpleTextWriter } from "../../helper/SimpleTextWriter.js";
export class DomConverter {
    static normalizeAttributeValue(value, useSingleQuotes = false) {
        if (typeof value === 'number')
            value = value.toString();
        if (value) {
            if (useSingleQuotes)
                return value.replaceAll('&', '&amp;').replaceAll('\'', '&#39;').replaceAll('<', '&lt;').replaceAll('>', '&gt;');
            return value.replaceAll('&', '&amp;').replaceAll('"', '&quot;').replaceAll('<', '&lt;').replaceAll('>', '&gt;');
        }
        return value.replaceAll('&', '&amp;').replaceAll('<', '&lt;').replaceAll('>', '&gt;');
    }
    static normalizeContentValue(value) {
        if (value)
            return value.replaceAll('&', '&amp;').replaceAll('<', '&lt;').replaceAll('Â ', '&nbsp;'); // !caution! -> this is not normal space, it's nbsp
        return value;
    }
    static IsSelfClosingElement(tag) {
        return tag === 'area' ||
            tag === 'base' ||
            tag === 'br' ||
            tag === 'col' ||
            tag === 'embed' ||
            tag === 'hr' ||
            tag === 'img' ||
            tag === 'input' ||
            tag === 'keygen' ||
            tag === 'link' ||
            tag === 'meta' ||
            tag === 'param' ||
            tag === 'source' ||
            tag === 'track' ||
            tag === 'wbr';
    }
    static ConvertToString(designItems, beautifyOutput, updatePositions = false) {
        let itw = beautifyOutput !== false ? new IndentedTextWriter() : new SimpleTextWriter();
        //TODO: check how we could support this beautify here, cause it's now a setting of the writer...
        //let options: HtmlWriterOptions = { beautifyOutput: beautifyOutput !== false, writeDesignerProperties: true, compressCssToShorthandProperties: true, parseJsonInAttributes: true, jsonWriteMode: 'beauty' };
        designItems[0].serviceContainer.htmlWriterService.write(itw, designItems, true, updatePositions);
        return itw.getString();
    }
}
