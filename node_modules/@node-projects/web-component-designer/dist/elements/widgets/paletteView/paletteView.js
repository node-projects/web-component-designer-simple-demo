import '../../controls/DesignerTabControl.js';
import { PaletteElements } from './paletteElements.js';
import { DesignerTabControl } from '../../controls/DesignerTabControl.js';
import { BaseCustomWebComponentLazyAppend, css } from '@node-projects/base-custom-webcomponent';
export class PaletteView extends BaseCustomWebComponentLazyAppend {
    selected = 'native';
    _designerTabControl;
    static style = css `
    :host {
      display: flex;
      flex-direction: column;
      flex: 1;
      height: 100%;
    }`;
    constructor() {
        super();
        this._restoreCachedInititalValues();
        this._designerTabControl = new DesignerTabControl();
        this._designerTabControl.selectedIndex = 0;
        this.shadowRoot.appendChild(this._designerTabControl);
    }
    async loadControls(serviceContainer, elementsServices) {
        for (const s of elementsServices) {
            try {
                let elements = await s.getElements();
                let paletteElement = new PaletteElements();
                paletteElement.title = s.name;
                this._designerTabControl.appendChild(paletteElement);
                paletteElement.loadElements(serviceContainer, elements);
            }
            catch (err) {
                console.warn('Error loading elements', err);
            }
        }
        this._designerTabControl.refreshItems();
    }
}
customElements.define('node-projects-palette-view', PaletteView);
