import { DomConverter } from "../../widgets/designerView/DomConverter.js";
import { copyToClipboard, getFromClipboard, getTextFromClipboard } from "../../helper/ClipboardHelper.js";
export const positionsJsonMime = 'web text/positions';
export class CopyPasteService {
    async copyItems(designItems) {
        const copyText = DomConverter.ConvertToString(designItems, false);
        const positions = designItems.map(x => x.instanceServiceContainer.designerCanvas.getNormalizedElementCoordinates(x.element));
        copyToClipboard([["text/html", copyText], [positionsJsonMime, JSON.stringify(positions)]]);
    }
    async getPasteItems(serviceContainer, instanceServiceContainer) {
        let html = '';
        let positions = null;
        const items = await getFromClipboard();
        if (items != null) {
            try {
                html = await (await items[0].getType('text/html'))?.text();
            }
            catch { }
            if (!html)
                html = await (await items[0].getType('text/plain'))?.text();
            try {
                let positionsJson = await (await items[0].getType(positionsJsonMime))?.text();
                positions = JSON.parse(positionsJson);
            }
            catch { }
        }
        else {
            html = await getTextFromClipboard();
        }
        const parserService = serviceContainer.htmlParserService;
        return [await parserService.parse(html, serviceContainer, instanceServiceContainer, true), positions];
    }
}
