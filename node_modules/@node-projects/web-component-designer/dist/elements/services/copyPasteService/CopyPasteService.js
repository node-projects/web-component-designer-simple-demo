import { DomConverter } from "../../widgets/designerView/DomConverter.js";
export const positionsJsonMime = 'web text/positions';
export class CopyPasteService {
    async copyItems(designItems) {
        const copyText = DomConverter.ConvertToString(designItems, null, false);
        const positions = designItems.map(x => x.instanceServiceContainer.designerCanvas.getNormalizedElementCoordinates(x.element));
        const data = [new ClipboardItem({ ["text/html"]: new Blob([copyText], { type: 'text/html' }), [positionsJsonMime]: new Blob([JSON.stringify(positions)], { type: positionsJsonMime }) })];
        try {
            await navigator.clipboard.write(data);
        }
        catch (err) {
            await navigator.clipboard.writeText(copyText);
        }
    }
    async getPasteItems(serviceContainer, instanceServiceContainer) {
        const items = await navigator.clipboard.read();
        let html = '';
        try {
            html = await (await items[0].getType('text/html'))?.text();
        }
        catch { }
        if (!html)
            html = await (await items[0].getType('text/plain'))?.text();
        let positions = null;
        try {
            let positionsJson = await (await items[0].getType(positionsJsonMime))?.text();
            positions = JSON.parse(positionsJson);
        }
        catch { }
        const parserService = serviceContainer.htmlParserService;
        return [await parserService.parse(html, serviceContainer, instanceServiceContainer), positions];
    }
}
