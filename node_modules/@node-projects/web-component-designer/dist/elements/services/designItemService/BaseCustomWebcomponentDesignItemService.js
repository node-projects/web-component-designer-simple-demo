import { DesignItem } from "../../item/DesignItem.js";
export class BaseCustomWebcomponentDesignItemService {
    createDesignItem(node, parsedNode, serviceContainer, instanceServiceContainer) {
        const di = new DesignItem(node, parsedNode, serviceContainer, instanceServiceContainer);
        if (node instanceof (node.ownerDocument.defaultView ?? window).HTMLTemplateElement) {
            requestAnimationFrame(() => {
                let repeatCount = 1;
                const attr = node.getAttribute('sample-repeat-count');
                if (attr) {
                    repeatCount = parseInt(attr);
                }
                for (let n = 0; n < repeatCount; n++) {
                    let par = node;
                    for (const n of node.content.childNodes) {
                        par = this.instancateNode(par, n);
                    }
                }
            });
        }
        return di;
    }
    instancateNode(parent, node, append = false) {
        const nd = node.cloneNode(false);
        if (append)
            parent.appendChild(nd);
        else {
            parent.parentNode.insertBefore(nd, parent.nextSibling);
            //parent.insertAdjacentElement('afterend', <Element>nd);
        }
        DesignItem.GetDesignItem(node).setView(nd);
        for (const n of node.childNodes) {
            this.instancateNode(nd, n, true);
        }
        return nd;
    }
}
