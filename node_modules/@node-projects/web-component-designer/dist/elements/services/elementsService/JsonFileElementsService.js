import { LazyLoader } from '@node-projects/base-custom-webcomponent';
// Reads a Json File and provides the Elements listed there
export class JsonFileElementsService {
    _name;
    get name() { return this._name; }
    _elementList;
    _resolveStored;
    _rejectStored;
    getElements() {
        if (this._elementList)
            return Promise.resolve(this._elementList);
        if (!this._resolveStored) {
            this._resolveStored = [];
            this._rejectStored = [];
        }
        return new Promise((resolve, reject) => { this._resolveStored.push(resolve); this._rejectStored.push(reject); });
    }
    constructor(name, file) {
        this._name = name;
        LazyLoader.LoadText(file).then(data => {
            let parsed = JSON.parse(data);
            this._elementList = [];
            parsed.elements.forEach(element => {
                if (this.isIElementDefintion(element))
                    this._elementList.push(element);
                else
                    this._elementList.push({ tag: element });
            });
            if (this._resolveStored) {
                this._resolveStored.forEach(x => x(this._elementList));
                this._resolveStored = null;
                this._rejectStored = null;
            }
        }).catch(err => {
            if (this._rejectStored) {
                this._rejectStored.forEach(x => x(err));
                this._resolveStored = null;
                this._rejectStored = null;
            }
        });
    }
    isIElementDefintion(object) {
        return object != null && object.tag != null;
    }
}
