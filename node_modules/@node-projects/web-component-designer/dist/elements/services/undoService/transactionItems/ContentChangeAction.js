import { NodeType } from '../../../item/NodeType.js';
export class ContentChangeAction {
    constructor(designItem, newValue) {
        this.title = "Change Content of " + designItem.name + " to " + newValue;
        this.designItem = designItem;
        this.newValue = newValue;
    }
    title;
    get affectedItems() {
        return [this.designItem];
    }
    undo() {
        if (this.designItem.nodeType == NodeType.TextNode || this.designItem.nodeType == NodeType.Comment) {
            this.designItem.element.textContent = this.oldValue;
        }
        else {
            this.designItem.element.innerHTML = this.oldValue;
        }
        this.affectedItems[0].instanceServiceContainer.contentService.onContentChanged.emit({ changeType: 'edited', designItems: [this.designItem] });
    }
    do() {
        if (this.designItem.nodeType == NodeType.TextNode || this.designItem.nodeType == NodeType.Comment) {
            this.oldValue = this.designItem.element.textContent;
            this.designItem.element.textContent = this.newValue;
        }
        else {
            this.oldValue = this.designItem.element.innerHTML;
            this.designItem.element.innerHTML = this.newValue;
        }
        this.affectedItems[0].instanceServiceContainer.contentService.onContentChanged.emit({ changeType: 'edited', designItems: [this.designItem] });
    }
    designItem;
    newValue;
    oldValue;
    mergeWith(other) {
        return false;
    }
}
