export class PropertyChangeAction {
    constructor(designItem, property, newValue, oldValue) {
        this.title = "Change Property";
        this.designItem = designItem;
        this.property = property;
        this.newValue = newValue;
        this.oldValue = oldValue;
    }
    title;
    get affectedItems() {
        return [this.designItem];
    }
    undo() {
        if (this.oldValue == null)
            this.property.service.clearValue([this.designItem], this.property);
        else
            this.property.service.setValue([this.designItem], this.property, this.oldValue);
    }
    do() {
        if (this.newValue == null)
            this.property.service.clearValue([this.designItem], this.property);
        else
            this.property.service.setValue([this.designItem], this.property, this.newValue);
    }
    designItem;
    property;
    newValue;
    oldValue;
    mergeWith(other) {
        if (other instanceof PropertyChangeAction && this.designItem === other.designItem && this.property === other.property) {
            this.newValue = other.newValue;
            return true;
        }
        return false;
    }
}
