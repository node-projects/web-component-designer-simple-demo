import { DomConverter } from '../../widgets/designerView/DomConverter.js';
import { BindingMode } from '../../item/BindingMode.js';
import { BindingTarget } from './BindingTarget.js';
export class BaseCustomeWebcomponentBindingsService {
    constructor() {
        this.writeBindingMode = 'direct';
    }
    parseBindingAttribute(attributeName, value) {
        if (value.startsWith("[[") || value.startsWith("{{")) {
            let bnd = {};
            bnd.rawName = attributeName;
            bnd.rawValue = value;
            bnd.target = BindingTarget.property;
            if (value.startsWith("[["))
                bnd.mode = BindingMode.oneWay;
            else
                bnd.mode = BindingMode.twoWay;
            bnd.invert = value[3] == '!';
            bnd.nullSafe = value[3] == '?';
            bnd.expression = value;
            return bnd;
        }
        return null;
    }
    parseBindingCss(attributeName, value) {
        return null;
    }
    serializeBinding() {
    }
    writeBinding(indentedTextWriter, designItem, type, keyValuePair) {
        indentedTextWriter.write(keyValuePair[0] + '="' + (keyValuePair[1].mode == BindingMode.oneWay ? '[[' : '{{') + DomConverter.normalizeAttributeValue(keyValuePair[1].expression) + (keyValuePair[1].mode == BindingMode.oneWay ? ']]' : ']]') + '"');
        return true;
    }
}
