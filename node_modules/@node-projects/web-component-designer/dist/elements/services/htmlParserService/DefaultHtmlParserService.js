import { DesignItem } from "../../item/DesignItem.js";
export class DefaultHtmlParserService {
  async parse(html, serviceContainer, instanceServiceContainer) {
    const parser = new DOMParser();
    const doc = parser.parseFromString(html, 'text/html');
    return this.createDesignItems(doc.body.children, serviceContainer, instanceServiceContainer);
  }

  createDesignItems(elements, serviceContainer, instanceServiceContainer) {
    let res = [];

    for (let el of elements) {
      //todo, use childNodes or textnodes will not work
      res.push(this._createDesignItemsRecursive(el, serviceContainer, instanceServiceContainer));
    }

    return res;
  }

  _createDesignItemsRecursive(element, serviceContainer, instanceServiceContainer) {
    let di = DesignItem.createDesignItemFromInstance(element, serviceContainer, instanceServiceContainer);

    for (let e of element.children) {
      //todo, use childNodes or textnodes will not work
      this._createDesignItemsRecursive(e, serviceContainer, instanceServiceContainer);
    }

    return di;
  }

}