import { BaseServiceContainer } from './BaseServiceContainer.js';
import { CodeViewMonaco } from '../widgets/codeView/code-view-monaco.js';
import { DemoView } from '../widgets/demoView/demoView.js';
import { GlobalContext } from './GlobalContext.js';
export class ServiceContainer extends BaseServiceContainer {
    config = {
        codeViewWidget: CodeViewMonaco,
        demoViewWidget: DemoView
    };
    designerExtensions = new Map();
    designerPointerExtensions = [];
    designerContextMenuExtensions;
    globalContext = new GlobalContext(this);
    designerTools = new Map();
    get bindingService() {
        return this.getLastService('bindingService');
    }
    get propertiesServices() {
        return this.getServices('propertyService');
    }
    get containerServices() {
        return this.getServices('containerService');
    }
    get snaplinesProviderService() {
        return this.getLastService('snaplinesProviderService');
    }
    get elementsServices() {
        return this.getServices('elementsService');
    }
    get instanceServices() {
        return this.getServices('instanceService');
    }
    get editorTypesServices() {
        return this.getServices('editorTypesService');
    }
    get htmlWriterServices() {
        return this.getServices('htmlWriterService');
    }
    get htmlParserService() {
        return this.getLastService('htmlParserService');
    }
    get intializationService() {
        return this.getLastService('intializationService');
    }
    get elementAtPointService() {
        return this.getLastService('elementAtPointService');
    }
    get prepareElementsForDesignerService() {
        return this.getLastService('prepareElementsForDesignerService');
    }
    get dragDropService() {
        return this.getLastService('dragDropService');
    }
    get copyPasteService() {
        return this.getLastService('copyPasteService');
    }
}
