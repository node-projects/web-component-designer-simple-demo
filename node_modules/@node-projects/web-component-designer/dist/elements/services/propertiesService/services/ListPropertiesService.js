import { UnkownElementPropertiesService } from './UnkownElementPropertiesService.js';
export class ListPropertiesService extends UnkownElementPropertiesService {
    constructor(propertyDefinitions) {
        super();
        this.name = "list";
        this._propertys = new Map();
        for (let e in propertyDefinitions) {
            let parr = [];
            this._propertys.set(e, parr);
            for (let p in propertyDefinitions[e]) {
                let pdef = propertyDefinitions[e][p];
                parr.push({
                    name: pdef.name,
                    description: pdef.description,
                    type: pdef.type,
                    default: pdef.default,
                    min: pdef.min,
                    max: pdef.max,
                    step: pdef.step,
                    values: pdef.values,
                    enumValues: pdef.enumValues,
                    value: pdef.value,
                    defaultValue: pdef.defaultValue,
                    service: this
                });
            }
        }
    }
    isHandledElement(designItem) {
        return this._propertys.has(designItem.element.localName);
    }
    _notifyChangedProperty(designItem, property, value) {
    }
    getProperties(designItem) {
        return this._propertys.get(designItem.element.localName);
    }
}
