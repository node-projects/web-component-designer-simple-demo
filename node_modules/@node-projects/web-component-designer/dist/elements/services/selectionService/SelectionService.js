import { TypedEvent } from "../../../../../base-custom-webcomponent/dist/index.js";
import { NodeType } from "../../item/NodeType.js";
export class SelectionService {
  constructor() {
    this.selectedElements = [];
    this.onSelectionChanged = new TypedEvent();
  }

  setSelectedElements(designItems) {
    let oldSelectedElements = this.selectedElements;

    if (!designItems) {
      this.selectedElements = [];
      this.primarySelection = null;
    } else {
      let newSelection = [];

      for (let d of designItems) {
        while (d && d.nodeType == NodeType.TextNode) d = d.parent;

        if (d && d.nodeType == NodeType.Element && d != d.instanceServiceContainer.contentService.rootDesignItem) newSelection.push(d);
      }

      this.selectedElements = newSelection;
      if (newSelection && newSelection.length > 0) this.primarySelection = newSelection[0];else this.primarySelection = null;
    }

    this.onSelectionChanged.emit({
      selectedElements: this.selectedElements,
      oldSelectedElements: oldSelectedElements
    });
  }

  clearSelectedElements() {
    this.setSelectedElements([]);
  }

  isSelected(designItem) {
    return this.selectedElements.indexOf(designItem) >= 0;
  }

}